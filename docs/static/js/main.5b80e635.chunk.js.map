{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","props","className","src","alt","Gifgrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACZC,mBAAS,IADG,mBACxCC,EADwC,KAC7BC,EAD6B,KAmB/C,OACC,0BAAMC,SAbc,SAACC,GACrBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,IACdO,QAAQC,IAAI,kBASb,2BACEC,KAAK,OACLC,MAAOX,EACPY,SArBuB,SAACT,GAC1BF,EAAcE,EAAEU,OAAOF,Y,uBCPZG,EAAO,uCAAE,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGGA,EAAKC,OAHR,uBAGXC,EAHW,EAGXA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GACd,MAAO,CACCC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QAGxCT,QAAQC,IAAIc,GAbF,kBAeLA,GAfK,4CAAF,sDCEPO,EAAc,SAACC,GAKxB,OAHCvB,QAAQC,IAAIsB,GAIT,yBAAKC,UAAU,0CACZ,yBAAKC,IAAOF,EAAMd,IAAKiB,IAAKH,EAAMJ,QAClC,2BAAII,EAAMJ,SCLRQ,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACbhB,mBAAS,CAC/BuB,KAAK,GACLc,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAiBvC,OAXAC,qBAAU,WACNzB,EAAQC,GACNyB,MAAM,SAAAC,GACCH,EAAS,CACLhB,KAAKmB,EACLL,SAAQ,SAGtB,CAACrB,IAGGsB,EDdsBK,CAAa3B,GAA/Ba,EAFyB,EAE9BN,KAAYc,EAFkB,EAElBA,QAGjB,OACI,oCACA,wBAAIJ,UAAU,qCAAqCjB,GAElDqB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAGLJ,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAkB,IAAOlB,EAAIC,IACPD,UEjBbmB,EAAe,WAAO,IAAD,EAEG7C,mBAAS,CAC5C,cAHgC,mBAE1B8C,EAF0B,KAEd/C,EAFc,KAWjC,OACC,oCACC,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEC+C,EAAWrB,KAAI,SAAAT,GAAQ,OAEtB,kBAAC,EAAD,CACC4B,IAAK5B,EACLA,SAAUA,U,MCrBhB+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.5b80e635.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\tconst [inputValue,setInputValue] = useState('')\r\n\r\n\tconst handleInputChange = (e)=>{\r\n\t\tsetInputValue(e.target.value)\r\n\t}\r\n\r\n\tconst handleSubmit = (e)=>{\r\n\t\te.preventDefault();\r\n\t\tif(inputValue.trim().length>2){\t\r\n\t\t\tsetCategories(cats=>[inputValue,...cats]);\r\n\t\t\tsetInputValue('');\r\n\t\t\tconsole.log('Submit echo')\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\t\t\r\n\t\t<input\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={inputValue}\r\n\t\t\t\tonChange ={ handleInputChange}\r\n\t\t\t\t\r\n\t\t\t\r\n\t\t\t/>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nAddCategory.propTypes={\r\n\tsetCategories:PropTypes.func.isRequired\r\n}\r\n","export const getGifs= async(category) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Kc693YcTsLVbu5TIWVX4PqD3rR7J4H8l`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    \r\n    const gifs = data.map(img=>{\r\n            return {\r\n                    id:img.id,\r\n                    title:img.title,\r\n                    url:img.images.downsized_medium.url\r\n                }\r\n            }) \r\n            console.log(gifs);\r\n\r\n          return gifs;\r\n        }","import React from 'react'\r\n\r\nexport const GifGridItem = (props) => {\r\n\r\n     console.log(props)\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src = {props.url} alt={props.title} />\r\n           <p>{props.title}</p> \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const Gifgrid = ({category}) => {\r\n\r\n  const {data:images,loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        <div className=\"card-grid\">\r\n        \r\n              {\r\n                  images.map(img=>(\r\n                      <GifGridItem \r\n                      key = {img.id}\r\n                      {...img} />\r\n                      ))\r\n                    }\r\n         \r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n       data:[],\r\n       loading: true\r\n   })\r\n\r\n   useEffect(() => {\r\n       getGifs(category)\r\n        .then (imgs=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n        })\r\n   }, [category])\r\n\r\n\r\n   return state\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport {Gifgrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\tconst [categories, setCategories] = useState([\r\n\t\t'One Punch'\r\n\r\n\t]);\r\n\t// const handleAdd = () => {\r\n\t// \t//  setCategories([...categories, 'Hunterxhunter'])\r\n\t// \tsetCategories((cats) => [...cats, 'HunterxHunter']);\r\n\t// };\r\n\r\n\treturn (\r\n\t\t<> \r\n\t\t\t<h2>GifExpertApp</h2>\r\n\t\t\t<AddCategory setCategories ={setCategories} />\r\n\t\t\t<hr />\r\n\r\n\t\t\t<ol>\r\n\t\t\t\t{\r\n\t\t\t\tcategories.map(category => (\r\n\t\t\t\t\t//  return <li key={category}>{category}</li>;\r\n\t\t\t\t\t<Gifgrid\r\n\t\t\t\t\t\tkey={category}\r\n\t\t\t\t\t\tcategory={category} />\r\n\t\t\t\t))}\r\n\t\t\t</ol>\r\n\t\t</>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './styles.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}